%{ import json }%
%{ import os }%
%{ import string }%
%{ from scenario import Day }%
//
//  MoreStatusStateMachineTests.swift
//  SonarTests
//
//  Created by NHSX on 5/11/20.
//  Copyright Â© 2020 NHSX. All rights reserved.
//

import XCTest
@testable import Sonar

class MoreStatusStateMachineTests: XCTestCase {

    var machine: StatusStateMachine!
    var persisting: PersistenceDouble!
    var contactEventsUploader: ContactEventsUploaderDouble!
    var drawerMailbox: DrawerMailboxingDouble!
    var notificationCenter: NotificationCenter!
    var userNotificationCenter: UserNotificationCenterDouble!
    var currentDate: Date!

    override func setUp() {
        persisting = PersistenceDouble()
        contactEventsUploader = ContactEventsUploaderDouble()
        drawerMailbox = DrawerMailboxingDouble()
        notificationCenter = NotificationCenter()
        userNotificationCenter = UserNotificationCenterDouble()
        currentDate = Date()

        machine = StatusStateMachine(
            persisting: persisting,
            contactEventsUploader: contactEventsUploader,
            drawerMailbox: drawerMailbox,
            notificationCenter: notificationCenter,
            userNotificationCenter: userNotificationCenter,
            dateProvider: { self.currentDate }
        )
    }

% for input_file in open(input_files, 'r'):
    %{ timeline = json.load(open(input_file.rstrip(), 'r')) }%
    %{ days = [Day.from_json(day) for day in timeline] }%
    func test${ os.path.splitext(os.path.basename(input_file))[0] }() throws {

        % for day in days:
        currentDate = ${ day.currentDate() }
        machine.tick()
        % for action in day.actions:
        do {
            % for line in action.code.splitlines():
            ${ line }
            % end
        }

        % end
        % end
    }

    % end
}
