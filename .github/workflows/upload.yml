name: upload

on:
  deployment
  # push:
  #   branches:
  #     - ci

jobs:
  bump-build-version:
    runs-on:
      - self-hosted
      - macos
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Merge master into test-flight
        run: |
          git fetch origin test-flight
          git checkout test-flight
          git merge ${{ github.sha }}

      - name: Bump Version
        run: ./bin/bump-build-version

      - name: Commit Version Bump
        run: ./bin/commit-version-bump

      - name: Push test-flight Branch
        run: |
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          git push origin test-flight

      - name: Notify Slack on Failure
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slack_bot_token }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: G010M35PZCM
          status: FAILED
          color: danger

  release:
    needs: bump-build-version
    runs-on:
      - self-hosted
      - macos
    strategy:
      matrix:
        fastlane-action:
          - beta
          # - internal
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
        with:
          ref: test-flight

      - name: Switch to Xcode 11
        run: sudo xcode-select -s /Applications/Xcode_11.app

      - name: Install Fastlane
        run: sudo gem install fastlane

      - name: Setup Development Config
        env:
          API_ENDPOINT: ${{ secrets.api_endpoint }}
        run: |
          tee "CoLocate.xcconfig" > /dev/null <<EOF
          #include "CoLocate/Base.xcconfig"
          API_ENDPOINT = $API_ENDPOINT
          EOF

      - name: Setup Fastlane Match
        env:
          MATCH: ${{ secrets.match }}
        run: ./bin/setup-match

      - name: Upload to Test Flight
        env:
          APPLE_USERNAME: ${{ secrets.apple_username }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.apple_password }}
          MATCH_PASSWORD: ${{ secrets.match_password }}
        run: fastlane ${{ matrix.fastlane-action }}

      - name: Get Build Number
        id: get-build-number
        run: |
          build_number=$(/usr/libexec/PlistBuddy -c "Print CFBundleVersion" "CoLocate/Info.plist")
          echo "::set-output name=build-number::$build_number"

      - name: Notify Slack on Upload
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slack_bot_token }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: G010M35PZCM
          status: UPLOADED (${{ steps.get-build-number.outputs.build-number }})

      - name: Notify Slack on Failure
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slack_bot_token }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: G010M35PZCM
          status: FAILED
          color: danger
