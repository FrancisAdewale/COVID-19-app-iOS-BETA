name: ci

on:
  push:
    branches-ignore:
      - ci

jobs:
  build:
    runs-on:
      - self-hosted
      - macos
    strategy:
      matrix:
        run-config:
          - { sdk: "iphoneos13.4" }
          - { sdk: "iphonesimulator13.4" }
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2

      - name: Switch to Xcode 11
        run: sudo xcode-select -s /Applications/Xcode_11.app

      - name: Show Build Version
        run: xcodebuild -version

      - name: Show Build Settings
        run: xcodebuild -showBuildSettings

      - name: Show Build SDK
        run: xcodebuild -showsdks

      - name: Setup Build Configuration
        env:
          GOOGLE_SERVICE_INFO_PLIST_INTERNAL: ${{ secrets.google_service_info_plist_internal }}
        run: |
          cp Sonar/Environments/Sonar.xcconfig.sample .secret/Sonar.xcconfig
          echo $GOOGLE_SERVICE_INFO_PLIST_INTERNAL > .secret/GoogleService-Info.plist
          cat Sonar/Environments/environment.json | ./bin/make-environment > .secret/Environment.swift

      - name: Run Build
        env:
          SDK: ${{ matrix.run-config['sdk'] }}
        run: xcodebuild -scheme Sonar -configuration release -sdk ${SDK} CODE_SIGNING_ALLOWED=NO

  test:
    needs: build
    runs-on:
      - self-hosted
      - macos
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2

      - name: Switch to Xcode 11
        run: sudo xcode-select -s /Applications/Xcode_11.app

      - name: Show Available Destinations
        run: xcodebuild -scheme Sonar -showdestinations

      - name: Setup Build Configuration
        env:
          GOOGLE_SERVICE_INFO_PLIST_INTERNAL: ${{ secrets.google_service_info_plist_internal }}
        run: |
          cp Sonar/Environments/Sonar.xcconfig.sample .secret/Sonar.xcconfig
          echo $GOOGLE_SERVICE_INFO_PLIST_INTERNAL > .secret/GoogleService-Info.plist
          cat Sonar/Environments/environment.json | ./bin/make-environment > .secret/Environment.swift

      - run: |
          killall "Simulator" || true
          xcrun simctl erase all

      - run: |
          rm -rf TestResults.xcresult

      - name: Run Test
        run: >
          xcodebuild
          -scheme Sonar
          test
          -destination "platform=iOS Simulator,OS=13.4,name=iPhone 11"
          -showBuildTimingSummary
          -allowProvisioningUpdates
          -resultBundlePath TestResults.xcresult

      - name: Upload Test Results
        uses: actions/upload-artifact@v1
        with:
          name: TestResults.xcresult
          path: TestResults.xcresult

  merge-to-internal:
    needs: test
    runs-on:
      - self-hosted
      - macos
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false

      # Since this workflow needs to trigger the ci workflow,
      # we can't use the built-in GITHUB_TOKEN, so we need to
      # set a remote url that uses a personal access token.
      - name: Set origin
        env:
          GITHUB_TOKEN: ${{ secrets.deployment_token }}
        run: git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git

      - name: Merge and push to internal branch
        env:
          GIT_AUTHOR_NAME: GitHub Actions
          GIT_AUTHOR_EMAIL: github.actions@example.com
        run: |
          git fetch origin internal
          git checkout internal
          git merge master
          git push origin internal

  notify:
    needs: [build, test, merge-to-internal]
    runs-on:
      - self-hosted
      - macos
    if: always()
    steps:
      - name: Notify Slack on Failure
        if: github.ref == 'refs/heads/master' && contains(needs.*.result, 'failure')
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slack_bot_token }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: G011ZPSAD4J
          status: FAILED
          color: danger

