name: ci

on: push

jobs:
  build:
    runs-on:
      - self-hosted
      - macos
    strategy:
      matrix:
        run-config:
          - { sdk: "iphoneos13.4" }
          - { sdk: "iphonesimulator13.4" }
    steps:
      - name: Set initial git configuration
        run: git config --global user.email "github.actions@example.com" && git config --global user.name "GitHub Actions"

      - name: Checkout Project
        uses: actions/checkout@v2

      - name: Switch to Xcode 11
        run: sudo xcode-select -s /Applications/Xcode_11.app

      - name: Show Build Version
        run: xcodebuild -version

      - name: Show Build Settings
        run: xcodebuild -showBuildSettings

      - name: Show Build SDK
        run: xcodebuild -showsdks

      - name: Setup Build Configuration
        env:
          GOOGLE_SERVICE_INFO_PLIST_INTERNAL: ${{ secrets.google_service_info_plist_internal }}
        run: |
          cp Sonar/Environments/Sonar.xcconfig.sample .secret/Sonar.xcconfig
          echo $GOOGLE_SERVICE_INFO_PLIST_INTERNAL > .secret/GoogleService-Info.plist
          cat Sonar/Environments/environment.json | ./bin/make-environment > .secret/Environment.swift

      - name: Run Build
        env:
          SDK: ${{ matrix.run-config['sdk'] }}
        run: xcodebuild -scheme Sonar -configuration release -sdk ${SDK} CODE_SIGNING_ALLOWED=NO

      - name: Notify Slack on Failure
        if: github.ref == 'refs/heads/master' && failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slack_bot_token }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: G011ZPSAD4J
          status: FAILED
          color: danger

  test:
    needs: build
    runs-on:
      - self-hosted
      - macos
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2

      - name: Switch to Xcode 11
        run: sudo xcode-select -s /Applications/Xcode_11.app

      - name: Show Available Destinations
        run: xcodebuild -scheme Sonar -showdestinations

      - name: Setup Build Configuration
        env:
          GOOGLE_SERVICE_INFO_PLIST_INTERNAL: ${{ secrets.google_service_info_plist_internal }}
        run: |
          cp Sonar/Environments/Sonar.xcconfig.sample .secret/Sonar.xcconfig
          echo $GOOGLE_SERVICE_INFO_PLIST_INTERNAL > .secret/GoogleService-Info.plist
          cat Sonar/Environments/environment.json | ./bin/make-environment > .secret/Environment.swift

      - run: |
          killall "Simulator" || true
          xcrun simctl erase all

      - run: |
          rm -rf TestResults.xcresult

      - name: Run Test
        run: >
          xcodebuild
          -scheme Sonar
          test
          -destination "platform=iOS Simulator,OS=13.4,name=iPhone 11"
          -showBuildTimingSummary
          -allowProvisioningUpdates
          -resultBundlePath TestResults.xcresult

      - name: Upload Test Results
        uses: actions/upload-artifact@v1
        with:
          name: TestResults.xcresult
          path: TestResults.xcresult

      - name: Notify Slack on Failure
        if: github.ref == 'refs/heads/master' && failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slack_bot_token }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: G011ZPSAD4J
          status: FAILED
          color: danger

  update-upload-tag:
    needs: test
    runs-on:
      - self-hosted
      - macos
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2

      - name: Set upload tag
        run: |
          git push origin --delete upload-to-internal || true
          git tag --force upload-to-internal
          git push origin upload-to-internal

  upload:
    needs: test
    runs-on:
      - self-hosted
      - macos
    if: "contains(fromJSON('[\"refs/heads/internal\", \"refs/heads/production\"]'), github.ref)"
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2

      - name: Bump the build version
        run: |
          ./bin/bump-build-version
          ./bin/commit-version-bump
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          git push

      - name: Switch to Xcode 11
        run: sudo xcode-select -s /Applications/Xcode_11.app

      - name: Install Fastlane
        run: sudo gem install fastlane

      - name: Setup Fastlane Match
        env:
          MATCH: ${{ secrets.match }}
        run: ./bin/setup-match

      - name: Upload to Test Flight
        env:
          API_ENDPOINT: ${{ secrets.api_endpoint }}
          APPLE_USERNAME: ${{ secrets.apple_username }}
          ENVIRONMENT_JSON_BETA: ${{ secrets.environment_json_beta }}
          ENVIRONMENT_JSON_INTERNAL: ${{ secrets.environment_json_internal }}
          ENVIRONMENT_JSON_PRODUCTION: ${{ secrets.environment_json_production }}
          GOOGLE_SERVICE_INFO_PLIST_INTERNAL: ${{ secrets.google_service_info_plist_internal }}
          GOOGLE_SERVICE_INFO_PLIST_PRODUCTION: ${{ secrets.google_service_info_plist_production }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.apple_password }}
          MATCH_PASSWORD: ${{ secrets.match_password }}
        run: fastlane release sonar_env:${GITHUB_REF#refs/heads/}

      - name: Upload IPA
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: Sonar.ipa
          path: Sonar.ipa

      - name: Create App Report
        run: |
          cd Reporting
          swift run Reporter ipa ../Sonar.ipa --output AppReport || true
          cd ..

      - name: Upload App Report
        uses: actions/upload-artifact@v1
        with:
          name: AppReport
          path: Reporting/AppReport

      - name: Update Deployment Status on Success
        if: success()
        run: >
          curl
          --verbose
          --url "${{ github.event.deployment.statuses_url }}"
          --header "authorization: Bearer ${{ secrets.deployment_token }}"
          --header "content-type: application/json"
          --data '{"state":"success"}'
        continue-on-error: true

      - name: Update Deployment Status on Failure
        if: failure()
        run: >
          curl
          --verbose
          --url "${{ github.event.deployment.statuses_url }}"
          --header "authorization: Bearer ${{ secrets.deployment_token }}"
          --header "content-type: application/json"
          --data '{"state":"failure"}'
        continue-on-error: true

      - name: Get Build Number
        id: get-build-number
        run: |
          build_number=$(/usr/libexec/PlistBuddy -c "Print CFBundleVersion" "Sonar/Info.plist")
          echo "::set-output name=build-number::$build_number"

      - name: Mark stories delivered in PivotalTracker
        env:
          PIVOTAL_TRACKER_API_TOKEN: ${{ secrets.pivotal_tracker_api_token }}
          PROJECT_ID: ${{ secrets.pivotal_tracker_project_id }}
        run: |
          bin/deliver-pivotal-tracker-stories

          # move the tag ahead
          git push origin --delete last-commit-to-run-on-ci || true
          git tag --force last-commit-to-run-on-ci
          git push origin last-commit-to-run-on-ci


      - name: Notify Slack on Upload
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slack_bot_token }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: G012ZPSAD4J
          status: UPLOADED [(${{ steps.get-build-number.outputs.build-number }})]

      - name: Notify Slack on Failure
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slack_bot_token }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: G011ZPSAD4J
          status: FAILED
          color: danger


