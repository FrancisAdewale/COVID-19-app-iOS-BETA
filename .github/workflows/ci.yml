name: ci

on:
  push:
    branches:
      # I'd like to enable running CI from multiple branches, but we currently
      # bump the build number on all CI runs and I haven't figured out how to
      # correctly gate that specific job to only run on a trigger from master.
      - master

jobs:
  build:
    runs-on:
      - self-hosted
      - macos
    strategy:
      matrix:
        run-config:
          - { sdk: "iphoneos13.4" }
          - { sdk: "iphonesimulator13.4" }
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2

      - name: Switch to Xcode 11
        run: sudo xcode-select -s /Applications/Xcode_11.app

      - name: Show Build Version
        run: xcodebuild -version

      - name: Show Build Settings
        run: xcodebuild -showBuildSettings

      - name: Show Build SDK
        run: xcodebuild -showsdks

      - name: Setup Build Configuration
        run: ./bin/setup-build-config

      - name: Run Build
        env:
          SDK: ${{ matrix.run-config['sdk'] }}
        run: xcodebuild -scheme CoLocate -sdk ${SDK} CODE_SIGNING_ALLOWED=NO

  test:
    needs: build
    runs-on:
      - self-hosted
      - macos
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2

      - name: Switch to Xcode 11
        run: sudo xcode-select -s /Applications/Xcode_11.app
      
      - name: Show Available Destinations
        run: xcodebuild -scheme CoLocate -showdestinations

      - name: Setup Build Configuration
        run: ./bin/setup-build-config

      - name: Run Test
        run: >
          xcodebuild
          -scheme CoLocate
          test
          -destination "platform=iOS Simulator,OS=13.4,name=iPhone 11"
          -showBuildTimingSummary
          -allowProvisioningUpdates

  bump-build-version:
    needs: test
    runs-on:
      - self-hosted
      - macos
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Merge master into test-flight
        run: |
          git fetch origin test-flight
          git checkout test-flight
          git merge ${{ github.sha }}

      - name: Bump Version
        run: ./bin/bump-build-version

      - name: Commit Version Bump
        run: ./bin/commit-version-bump

      - name: Push test-flight Branch
        run: |
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          git push origin test-flight

  # This ideally triggers from pushes to the test-flight branch, but doing that
  # requires using a personal access token to push the version bump instead of
  # the built-in GITHUB_TOKEN.
  #
  # https://help.github.com/en/actions/reference/events-that-trigger-workflows#about-workflow-events
  release:
    needs: bump-build-version
    runs-on:
      - self-hosted
      - macos
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
        with:
          ref: test-flight

      - name: Switch to Xcode 11
        run: sudo xcode-select -s /Applications/Xcode_11.app

      - name: Install Fastlane
        run: gem install fastlane

      - name: Setup Development Config
        run: cp Development.xcconfig.sample Development.xcconfig

      - name: Setup Release Config
        env:
          API_ENDPOINT: ${{ secrets.api_endpoint }}
        run: |
          tee "Release.xcconfig" > /dev/null <<EOF
          API_ENDPOINT = $API_ENDPOINT
          EOF

      - name: Setup Fastlane Match
        env:
          DISTRIBUTION_CER: ${{ secrets.distribution_cer }}
          DISTRIBUTION_P12: ${{ secrets.distribution_p12 }}
          PROVISIONING_PROFILE: ${{ secrets.provisioning_profile }}
        run: ./bin/setup-match

      - name: Upload to Test Flight
        env:
          APPLE_USERNAME: ${{ secrets.apple_username }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.apple_password }}
          MATCH_PASSWORD: ${{ secrets.match_password }}
        run: fastlane beta
